set serverout on
<<a>>
declare
       x number:=5;
begin
<<b>>
      declare
             x number:=6;
begin
      dbms_output.put_line('innere x '||x);
      dbms_output.put_line('outer x '||a.x);
end;
dbms_output.put_line('x '||x);
end;
/


set serverout on
begin 
for i in 1..10
loop
DBMS_OUTPUT.PUT_LINE (i);
end loop;
end;
/

set serverout on
begin 
for i in reverse 1..10
loop
DBMS_OUTPUT.PUT_LINE (i);
end loop;
end;
/

set serverout on

declare 
     v_name varchar2(20);
     vsal number;
begin
   for i IN 100..109
   loop
       select last_name ,salary
     into v_name,vsal
     from employees
     where employee_id=i;
     
     DBMS_OUTPUT.PUT_LINE(v_name||'  '||vsal);
     end loop;
     end;
     /

set serverout on

declare 
     v_name employees.last_name%type;
     vsal employees.last_name%type;
begin
   for i IN 100..109
   loop
       select last_name ,salary
     into v_name,vsal
     from employees
     where employee_id=i;
     
     DBMS_OUTPUT.PUT_LINE(v_name||'  '||vsal);
     end loop;
     end;
     /

set serverout on
declare 
TYPE emp_record_type IS RECORD
(last_name VARCHAR2(25),
job_id VARCHAR2(25),
salary NUMBER(8,2));
emp_record  emp_record_type;
begin
      select last_name,job_id,salary
      into emp_record
      from employees
      where employee_id=&empid;
      
      dbms_output.put_line(emp_record.last_name||'  '||
      emp_record.job_id||'   '||emp_record.salary);
      end;
      /

set serverout on
declare 
      emp_record  employees%rowtype;
begin
      select *
      into emp_record
      from employees
      where employee_id=&empid;
      
      dbms_output.put_line(emp_record.last_name||'  '||
      emp_record.job_id||'   '||emp_record.salary);
      end;
      /

set serverout on
declare
       type num_tab_type is table of number
       index by binary_integer;
       
       num_tab num_tab_type;
begin
for i in 1..10
loop
num_tab(i):=i*10;
end loop;

for i in num_tab.first..num_tab.last
loop
dbms_output.put_line(num_tab(i));
end loop;
end;
/

set serverout on
declare
       type num_tab_type is table of employees.last_name%type
       index by binary_integer;
       
       num_tab num_tab_type;
begin
for i in 100..109
loop
select last_name
into num_tab(i)
from employees
where employee_id=i;
end loop;

for i in num_tab.first..num_tab.last
loop
dbms_output.put_line(num_tab(i));
end loop;
end;
/

set serverout on

declare
type emp_record_type is record
(
lname employees.lastname%type,
sal employees.salary%type
);
declare
       type num_tab_type is table of emp_record_type
       index by binary_integer;
       
       num_tab num_tab_type;
begin
for i in 100..109
loop
select last_name,salary
into num_tab(i)
from employees
where employee_id=(i);
end loop;

for i in num_tab.first..num_tab.last
loop
dbms_output.put_line(num_tab(i).lname);
DBMS_OUTPUT.put_line(num_tab(i).sal);
end loop;
end;
/

set serverout on
declare
      vname employees.last_name%type;
      vsal employees.salary%type;

begin
      select last_name,salary
      into vname,vsal
      from employees
      where employee_id in (&empid);
      

exception
       when NO_DATA_FOUND THEN
            dbms_output.put_line('No emps');
            when too_many_rows then
            DBMS_OUTPUT.PUT_LINE('too many rows');
            end;
            /

set serverout on
declare
      vname employees.last_name%type;
      vsal employees.salary%type;

begin
      select last_name,salary
      into vname,vsal
      from employees
      where employee_id in (&empid);
      
      DBMS_OUTPUT.put_line(vname||'  '||vsal);
      

exception
       when others THEN
            dbms_output.put_line('error..');
            end;
            /

set serverout on

declare
       emp_exist EXCEPTION;
       
       PRAGMA EXCEPTION_INIT(emp_exist,-2292);
BEGIN
      DELETE FROM DEPARTMENTS
      WHERE DEPARTMENT_ID=&deptid;
exception
      when emp_exist then 
        dbms_output.put_line('cannot remove dept since emps exist');
        end;
        /

set serverout on
declare
       v_age number :=&age;
       
       invalid_age EXCEPTION;
       
BEGIN
      IF  V_AGE NOT BETWEEN 21 AND 60 THEN
                RAISE INVALID_AGE;
         ELSE
                DBMS_OUTPUT.PUT_LINE('CONGRATS U ARE ELIGIBLE');
         END IF;
EXCEPTION 
       WHEN INVALID_AGE THEN
       DBMS_OUTPUT.PUT_LINE('AGE MUST BE 21-60');
       END;
       /
                
set serverout on
declare
       v_age number :=&age;
       
BEGIN
      IF  v_age NOT BETWEEN 21 AND 60 THEN
                RAISE_APPLICATION_ERROR (-20111,'AGE MUST BE 21-60');
    
         END IF;
       END;
       /
                